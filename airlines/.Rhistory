a3.dat <- list( "fatal"=airline$fatal, "miles"=airline$miles, "rate"=airline$rate, "I"= 26)
a3.par <- c("alpha","beta","gamma")
# Model compilation and burn-in
a3.mod <- jags.model( file = "a3.jag", data = a3.dat, inits = a3.ini, n.chains = 2,n.adapt = 1000 )
cat( "model
{
for( i in 1:I )
{
mu[i] <- alpha + beta*miles[i] + gamma*rate[i]
fatal[i] ~ dpois( mu[i] )
}
alpha ~ dgamma(0,0.000001)
beta ~ dgamma(0,0.000001)
gamma ~ dgamma(0,0.000001)
}",file="a3.jag" )
a3.ini <- list( alpha=7.5, beta = 2.2, gamma = 4.4 )
a3.dat <- list( "fatal"=airline$fatal, "miles"=airline$miles, "rate"=airline$rate, "I"= 26)
a3.par <- c("alpha","beta","gamma")
# Model compilation and burn-in
a3.mod <- jags.model( file = "a3.jag", data = a3.dat, inits = a3.ini, n.chains = 2,n.adapt = 1000 )
cat( "model
{
for( i in 1:I )
{
mu[i] <- alpha + beta*miles[i] + gamma*rate[i]
fatal[i] ~ dpois( mu[i] )
}
alpha ~ dgamma(0,0.000001)
beta ~ dgamma(0,0.000001)
gamma ~ dgamma(0,0.000001)
}",file="a3.jag" )
a3.ini <- list( alpha=7.5, beta = 2.2, gamma = 0 )
a3.dat <- list( "fatal"=airline$fatal, "miles"=airline$miles, "rate"=airline$rate, "I"= 26)
a3.par <- c("alpha","beta","gamma")
# Model compilation and burn-in
a3.mod <- jags.model( file = "a3.jag", data = a3.dat, inits = a3.ini, n.chains = 2,n.adapt = 1000 )
cat( "model
{
for( i in 1:I )
{
mu[i] <- alpha + beta*miles[i] + gamma*rate[i]
fatal[i] ~ dpois( mu[i] )
}
alpha ~ dgamma(0,0.000001)
beta ~ dgamma(0,0.000001)
gamma ~ dgamma(0,0.000001)
}",file="a3.jag" )
a3.ini <- list( alpha=7.5, beta = 2.2, gamma = 0 )
a3.dat <- list( "fatal"=airline$fatal, "miles"=airline$miles, "rate"=airline$rate, "I"= 26)
a3.par <- c("alpha","beta","gamma")
# Model compilation and burn-in
a3.mod <- jags.model( file = "a3.jag", data = a3.dat, inits = a3.ini, n.chains = 3,n.adapt = 1000 )
cat( "model
{
for( i in 1:I )
{
mu[i] <- alpha - beta*miles[i] + gamma*rate[i]
fatal[i] ~ dpois( mu[i] )
}
alpha ~ dnorm(0,0.000001)
beta ~ dnorm(0,0.000001)
gamma ~ dnorm(0,0.000001)
}",file="a3.jag" )
a3.ini <- list( alpha=7.5, beta = -2.2, gamma = 4.4 )
a3.dat <- list( "fatal"=airline$fatal, "miles"=airline$miles, "rate"=airline$rate, "I"= 26)
a3.par <- c("alpha","beta","gamma")
# Model compilation and burn-in
a3.mod <- jags.model( file = "a3.jag", data = a3.dat, inits = a3.ini, n.chains = 2,n.adapt = 1000 )
update(a3.mod,5000)
# Sampling from the posterior
a3.res <- coda.samples( a3.mod, var = a3.par, n.iter = 10000, thin = 10 )
summary( a3.res )
#per plotare confornto
j.samples = coda.samples(model = a3.mod,variable.names = c('alpha', 'beta', 'gamma'), n.iter = 10000)
mod1 = ggs(as.mcmc(j.samples[1]))
par(mar=c(2,1,1,1))
plot(j.samples)
# theta <- rgamma(6000, 634, 26 )
# y.2002 <- rpois(6000,theta)
# plot( table(y.2002), type="h", lwd=5, lend=2, col=gray(0.2), bty="n", ylab="", xlim=c(5,50) )
# tpr <- table( as.matrix( a3.res[,"fatal"] ) )
# points( as.numeric(names(tpr))+0.4, tpr, type="h", col="red", lwd=4 )
# prediction
#
# result3 = ggs(a3.res)
# ggs_density(result3)
# ggs_traceplot(result3)
# ggs_running(result3)
cat( "model {
for( i in 1:I ) {
fatal[i] ~ dpois(mu)
}
mu ~ dgamma(0.01,0.01)
}", file="a1.jag" )
a1.par <- c("mu","fatal[27]")
a1.ini <- list(list( mu=22 ),
list( mu=23 ),
list( mu=24 ) )
a1.dat <- list( fatal = c(airline$fatal,NA), I=27 )
# Model compilation and burn-in
a1.mod <- jags.model( file = "a1.jag",
data = a1.dat,
inits = a1.ini,
n.chains = 3,
n.adapt = 1000 )
# Sampling from the posterior
a1.res <- coda.samples( a1.mod,
var = a1.par,
n.iter = 10000,
thin = 10 )
summary( a1.res )
# theta <- rgamma(6000, 634, 26 )
# y.2002 <- rpois(6000,theta)
# plot( table(y.2002), type="h", lwd=5, lend=2, col=gray(0.2), bty="n", ylab="", xlim=c(5,50) )
# tpr <- table( as.matrix( a1.res[,"fatal[27]"] ) )
# points( as.numeric(names(tpr))+0.4, tpr, type="h", col="red", lwd=4 )
j.samples = coda.samples(model = a1.mod,variable.names = c("mu","fatal[27]"), n.iter = 10000)
mod1 = ggs(as.mcmc(j.samples[1]))
par(mar=c(2,1,1,1))
plot(j.samples)
###################
cat( "model {
for( i in 1:I ) {
fatal[i] ~ dpois(mu)
}
mu ~ dgamma(0.01,0.01)
}", file="a1.jag" )
a1.par <- c("mu","fatal[27]")
a1.ini <- list(list( mu=22 ),
list( mu=23 ),
list( mu=24 ) )
a1.dat <- list( fatal = c(airline$fatal,NA), I=27 )
# Model compilation and burn-in
a1.mod <- jags.model( file = "a1.jag",
data = a1.dat,
inits = a1.ini,
n.chains = 3,
n.adapt = 1000 )
# Sampling from the posterior
a1.res <- coda.samples( a1.mod,
var = a1.par,
n.iter = 10000,
thin = 10 )
summary( a1.res )
# theta <- rgamma(6000, 634, 26 )
# y.2002 <- rpois(6000,theta)
# plot( table(y.2002), type="h", lwd=5, lend=2, col=gray(0.2), bty="n", ylab="", xlim=c(5,50) )
# tpr <- table( as.matrix( a1.res[,"fatal[27]"] ) )
# points( as.numeric(names(tpr))+0.4, tpr, type="h", col="red", lwd=4 )
#
# j.samples = coda.samples(model = a1.mod,variable.names = c("mu","fatal[27]"), n.iter = 10000)
# mod1 = ggs(as.mcmc(j.samples[1]))
# par(mar=c(2,1,1,1))
# plot(j.samples)
###################
cat( "model {
for( i in 1:I ) {
fatal[i] ~ dpois(mu)
}
mu ~ dgamma(0.01,0.01)
}", file="a1.jag" )
a1.par <- c("mu","fatal[27]")
a1.ini <- list(list( mu=22 ),
list( mu=23 ),
list( mu=24 ) )
a1.dat <- list( fatal = c(airline$fatal,NA), I=27 )
# Model compilation and burn-in
a1.mod <- jags.model( file = "a1.jag",
data = a1.dat,
inits = a1.ini,
n.chains = 3,
n.adapt = 1000 )
# Sampling from the posterior
a1.res <- coda.samples( a1.mod,
var = a1.par,
n.iter = 10000,
thin = 10 )
summary( a1.res )
theta <- rgamma(6000, 634, 26 )
y.2002 <- rpois(6000,theta)
plot( table(y.2002), type="h", lwd=5, lend=2, col=gray(0.2), bty="n", ylab="", xlim=c(5,50) )
tpr <- table( as.matrix( a1.res[,"fatal[27]"] ) )
points( as.numeric(names(tpr))+0.4, tpr, type="h", col="red", lwd=4 )
# j.samples = coda.samples(model = a1.mod,variable.names = c("mu","fatal[27]"), n.iter = 10000)
# mod1 = ggs(as.mcmc(j.samples[1]))
# par(mar=c(2,1,1,1))
# plot(j.samples)
###################
cat( "model {
for( i in 1:I ) {
fatal[i] ~ dpois(mu)
}
mu ~ dgamma(0.01,0.01)
}", file="a1.jag" )
a1.par <- c("mu","fatal[27]")
a1.ini <- list(list( mu=22 ),
list( mu=23 ),
list( mu=24 ) )
a1.dat <- list( fatal = c(airline$fatal,NA), I=27 )
# Model compilation and burn-in
a1.mod <- jags.model( file = "a1.jag",
data = a1.dat,
inits = a1.ini,
n.chains = 3,
n.adapt = 1000 )
# Sampling from the posterior
a1.res <- coda.samples( a1.mod,
var = a1.par,
n.iter = 10000,
thin = 10 )
summary( a1.res )
theta <- rgamma(6000, 634, 26 )
y.2002 <- rpois(6000,theta)
plot( table(y.2002), type="h", lwd=5, lend=2, col=gray(0.2), bty="n", ylab="", xlim=c(5,50) )
tpr <- table( as.matrix( a1.res[,"fatal[27]"] ) )
points( as.numeric(names(tpr))+0.4, tpr, type="h", col="red", lwd=4 )
legend("topright", c('Prior','Posterior'),col=c(gray(0.2),'red'),lwd = 10)
# j.samples = coda.samples(model = a1.mod,variable.names = c("mu","fatal[27]"), n.iter = 10000)
# mod1 = ggs(as.mcmc(j.samples[1]))
# par(mar=c(2,1,1,1))
# plot(j.samples)
###################
a2.ini <- list( list( lambda=10 ),list( lambda=20 ),list( lambda=30 ) )
a2.dat <- list( fatal=c(airline$fatal,NA),miles=c(airline$miles,20), I=27 )
a2.par <- c("mu","fatal[27]")
# Model compilation and burn-in
a2.mod <- jags.model( file = "a2.jag",data = a2.dat,inits = a2.ini,n.chains = 3,n.adapt = 1000 )
# Sampling from the posterior
a2.res <- coda.samples( a2.mod,var = a2.par,n.iter = 10000,thin = 10 )
summary( a2.res )
#print( xyplot( a2.res[,1:2] ) )
theta <- rgamma(6000, 634, 26 )
y.2002 <- rpois(6000,theta)
plot( table(y.2002), type="h", lwd=5, lend=2, col=gray(0.2), bty="n", ylab="", xlim=c(5,50) )
tpr <- table( as.matrix( a2.res[,"fatal[27]"] ) )
points( as.numeric(names(tpr))+0.4, tpr, type="h", col="red", lwd=4 )
result2 = ggs(a2.res)
ggs_density(result2)
ggs_traceplot(result2)
ggs_running(result2)
ggs_autocorrelation(result2)
> summary( lm( log( fatal/miles ) ~ I(year-1985), data=airline )
summary( lm( log( fatal/miles ) ~ I(year-1985), data=airline )
summary( lm( log( fatal/miles ) ~ I(year-1985), data=airline )
summary(lm( log( fatal/miles ) ~ I(year-1985), data=airline))
summary(lm( log( fatal/miles ) ~ year, data=airline))
summary(lm( log( fatal/miles ) ~ (year-10), data=airline))
summary(lm( log( fatal/miles ) ~ I(year-10), data=airline))
summary(lm( log( fatal/miles ) ~ I(year-198510), data=airline))
summary(lm( log( fatal/miles ) ~ I(year-1985), data=airline))
I(airline$year-1985)
(airline$year-1985)
(airline$year)
summary(lm( log( fatal/miles ) ~ (year-1985), data=airline))
summary(lm( log( fatal/miles ) ~ I(year-1985), data=airline))
I
summary(lm( log( fatal/miles ) ~ I(year-1995), data=airline))
summary(lm( log( fatal/miles ) ~ I(year-2000), data=airline))
summary(lm( log( fatal/miles ) ~ I(year-1976), data=airline))
summary(lm( log( fatal/miles ) ~ I(year-1985), data=airline))
summary( glm4 <- glm( fatal ~ I(year-1985) + offset(log(miles)),family=poisson,data=airline)
summary(glm4 <- glm( fatal ~ I(year-1985) + offset(log(miles)),family=poisson,data=airline)=
summary(glm4 <- glm( fatal ~ I(year-1985) + offset(log(miles)),family=poisson,data=airline))
cat( "model
{
for( i in 1:I )
{
mu[i] <- (alpha + beta*(i-10)) * miles[i]
fatal[i] ~ dpois( mu[i] )
}
alpha ~ dnorm(0,0.000001)
beta ~ dnorm(0,0.000001)
}",file="a3.jag" )
a3.ini <- list( list( alpha=10, beta=-0.5 ),list( alpha=20, beta=-0.6 ),list( alpha=30, beta=-0.4 ) )
a3.dat <- list( fatal=c(airline$fatal,NA),miles=c(airline$miles,20), I=27 )
a3.par <- c("alpha","beta","fatal[27]")
# Model compilation and burn-in
a3.mod <- jags.model( file = "a3.jag",data = a3.dat,inits = a3.ini,n.chains = 3,n.adapt = 1000 )
# Sampling from the posterior
a3.res <- coda.samples( a3.mod,var = a3.par,n.iter = 10000,thin = 10 )
summary( a3.res )
library( Epi )
library( Epi )
ci.lin( glm4 )
print( xyplot( a4.res[,1:2] ) )
print( xyplot( a3.res[,1:2] ) )
print( densityplot( a4.res[,1:2], aspect="fill" ) )
print( densityplot( a3.res[,1:2], aspect="fill" ) )
a4.m <- as.matrix(a3.res)
enum.2002 <- exp(a4.m[,"alpha"] + a4.m[,"beta"]*17)*20
summary( enum.2002 )
plot( table(y.2002), type="h", lwd=5, lend=2, col=gray(0.2), bty="n", ylab="", xlim=c(5,50), title("ciao"))
plot(main = 'Posterior predictive distribution of y in 2002', table(y.2002), type="h", lwd=5, lend=2, col=gray(0.2), bty="n", ylab="", xlim=c(5,50))
legend("topright", c('Prior','Posterior'),col=c(gray(0.2),'red'),lwd = 10)
plot( table(y.2002), type="h", lwd=5, lend=2, col=gray(0.2), bty="n", ylab="", xlim=c(5,50) )
tpr <- table( as.matrix( a1.res[,"fatal[27]"] ) )
points( as.numeric(names(tpr))+0.4, tpr, type="h", col="red", lwd=4 )
legend("topright", c('Prior','Posterior'),col=c(gray(0.2),'red'),lwd = 10)
cat( "model {
for( i in 1:I ) {
fatal[i] ~ dpois(mu)
}
mu ~ dgamma(0.01,0.01)
}", file="a1.jag" )
a1.par <- c("mu","fatal[27]")
a1.ini <- list(list( mu=22 ),
list( mu=23 ),
list( mu=24 ) )
a1.dat <- list( fatal = c(airline$fatal,NA), I=27 )
# Model compilation and burn-in
a1.mod <- jags.model( file = "a1.jag",
data = a1.dat,
inits = a1.ini,
n.chains = 3,
n.adapt = 1000 )
# Sampling from the posterior
a1.res <- coda.samples( a1.mod,
var = a1.par,
n.iter = 10000,
thin = 10 )
summary( a1.res )
theta <- rgamma(6000, 634, 26 )
y.2002 <- rpois(6000,theta)
plot( main = 'Posterior predictive distribution of y in 2002',table(y.2002), type="h", lwd=5, lend=2, col=gray(0.2), bty="n", ylab="", xlim=c(5,50) )
tpr <- table( as.matrix( a1.res[,"fatal[27]"] ) )
points( as.numeric(names(tpr))+0.4, tpr, type="h", col="red", lwd=4 )
legend("topright", c('Directly simulated','posterior values from BUGS output'),col=c(gray(0.2),'red'),lwd = 10)
# j.samples = coda.samples(model = a1.mod,variable.names = c("mu","fatal[27]"), n.iter = 10000)
# mod1 = ggs(as.mcmc(j.samples[1]))
# par(mar=c(2,1,1,1))
# plot(j.samples)
###################
legend("topright", c('Directly simulated','posterior values from BUGS output'),col=c(gray(0.2),'red'),lwd = 5)
plot( main = 'Posterior predictive distribution of y in 2002',table(y.2002), type="h", lwd=5, lend=2, col=gray(0.2), bty="n", ylab="", xlim=c(5,50) )
tpr <- table( as.matrix( a1.res[,"fatal[27]"] ) )
points( as.numeric(names(tpr))+0.4, tpr, type="h", col="red", lwd=4 )
legend("topright", c('Directly simulated','posterior values from BUGS output'),col=c(gray(0.2),'red'),lwd = 5)
plot( main = 'Posterior predictive distribution of y in 2002',table(y.2002), type="h", lwd=5, lend=2, col=gray(0.2), bty="n", ylab="", xlim=c(5,50) )
tpr <- table( as.matrix( a1.res[,"fatal[27]"] ) )
points( as.numeric(names(tpr))+0.4, tpr, type="h", col="red", lwd=4 )
legend("topright", c('Directly simulated','posterior values from BUGS output'),col=c(gray(0.2),'red'),lwd = 5,text.width = 3)
plot( main = 'Posterior predictive distribution of y in 2002',table(y.2002), type="h", lwd=5, lend=2, col=gray(0.2), bty="n", ylab="", xlim=c(5,50) )
tpr <- table( as.matrix( a1.res[,"fatal[27]"] ) )
points( as.numeric(names(tpr))+0.4, tpr, type="h", col="red", lwd=4 )
legend("topright", c('Directly simulated','posterior values from BUGS output'),col=c(gray(0.2),'red'),lwd = 5,text.width = 10)
plot( main = 'Posterior predictive distribution of y in 2002',table(y.2002), type="h", lwd=5, lend=2, col=gray(0.2), bty="n", ylab="", xlim=c(5,60) )
tpr <- table( as.matrix( a1.res[,"fatal[27]"] ) )
plot( main = 'Posterior predictive distribution of y in 2002',table(y.2002), type="h", lwd=5, lend=2, col=gray(0.2), bty="n", ylab="", xlim=c(5,60) )
tpr <- table( as.matrix( a1.res[,"fatal[27]"] ) )
points( as.numeric(names(tpr))+0.4, tpr, type="h", col="red", lwd=4 )
legend("topright", c('Directly simulated','posterior values from BUGS output'),col=c(gray(0.2),'red'),lwd = 5,text.width = 10)
plot( main = 'Posterior predictive distribution of y in 2002',table(y.2002), type="h", lwd=5, lend=2, col=gray(0.2), bty="n", ylab="", xlim=c(5,60) )
tpr <- table( as.matrix( a1.res[,"fatal[27]"] ) )
points( as.numeric(names(tpr))+0.4, tpr, type="h", col="red", lwd=4 )
legend("topright", c('Directly simulated','posterior values from BUGS output'),col=c(gray(0.2),'red'),lwd = 5)
result3 = ggs(a3.res)
ggs_density(result)
ggs_traceplot(result)
ggs_running(result)
ggs_autocorrelation(result3)
#Model Comparison
DICmod1 = dic.samples(a1.mod, n.iter=10000, thin=10, type="pD")
DICmod3 = dic.samples(a3.mod, n.iter=10000, thin =10, type="pD")
DICmod1
DICmod3
e2002.qnt <- quantile( enum.2002, probs=c(50,2.5,97.5)/100)
plot( density(enum.2002), type="l", lwd=3 )
abline( v=e2002.qnt )
plot( density(enum.2002), type="l", lwd=3 )
abline( v=e2002.qnt )
(e2002.qnt <- quantile( enum.2002, probs=c(50,2.5,97.5)/100))
a4.m <- as.matrix(a3.res)
enum.2002 <- exp(a4.m[,"alpha"] + a4.m[,"beta"]*17)*20
summary( enum.2002 )
(e2002.qnt <- quantile( enum.2002, probs=c(50,2.5,97.5)/100))
plot( density(enum.2002), type="l", lwd=3 )
abline( v=e2002.qnt )
plot( density(enum.2002), type="l", lwd=2 )
a4.m <- as.matrix(a3.res)
enum.2002 <- exp(a4.m[,"alpha"] + a4.m[,"beta"]*17)*20
summary( enum.2002 )
(e2002.qnt <- quantile( enum.2002, probs=c(50,2.5,97.5)/100))
plot( density(enum.2002), type="l", lwd=2, col= "red" )
abline( v=e2002.qnt )
a3.m <- as.matrix(a3.res)
enum.2002 <- exp(a3.m[,"alpha"] + a4.m[,"beta"]*17)*20
summary( enum.2002 )
(e2002.qnt <- quantile( enum.2002, probs=c(50,2.5,97.5)/100))
plot( density(enum.2002), type="l", lwd=2, col= "red" )
abline( v=e2002.qnt)
a3.m
summary( enum.2002 )
cat( "model
{
for( i in 1:I )
{
mu[i] <- exp( alpha + beta*(i-10) ) * miles[i]
fatal[i] ~ dpois( mu[i] )
}
alpha ~ dnorm(0,0.000001)
beta ~ dnorm(0,0.000001)
}",
file="a4.jag" )
a4.ini <- list( list( alpha=1.0, beta=-0.05 ),
list( alpha=1.5, beta=-0.06 ),
list( alpha=0.5, beta=-0.04 ) )
a4.dat <- list( fatal=c(airline$fatal,NA),
miles=c(airline$miles,20), I=27 )
a4.par <- c("alpha","beta","fatal[27]")
# Model compilation and burn-in
a4.mod <- jags.model( file = "a4.jag",
data = a4.dat,
inits = a4.ini,
n.chains = 3,
n.adapt = 1000 )
cat( "model
{
for( i in 1:I )
{
mu[i] <- exp( alpha + beta*(i-10) ) * miles[i]
fatal[i] ~ dpois( mu[i] )
}
alpha ~ dnorm(0,0.000001)
beta ~ dnorm(0,0.000001)
}",
file="a4.jag" )
a4.ini <- list( list( alpha=1.0, beta=-0.05 ),
list( alpha=1.5, beta=-0.06 ),
list( alpha=0.5, beta=-0.04 ) )
a4.dat <- list( fatal=c(airline$fatal,NA),
miles=c(airline$miles,20), I=27 )
a4.par <- c("alpha","beta","fatal[27]")
# Model compilation and burn-in
a4.mod <- jags.model( file = "a4.jag",
data = a4.dat,
inits = a4.ini,
n.chains = 3,
n.adapt = 1000 )
# Sampling from the posterior
a4.res <- coda.samples( a4.mod,
var = a4.par,
n.iter = 10000,
thin = 10 )
summary( a4.res )
a3.m <- as.matrix(a3.res)
enum.2002 <- exp(a3.m[,"alpha"] + a4.m[,"beta"]*17)*20
summary( enum.2002 )
(e2002.qnt <- quantile( enum.2002, probs=c(50,2.5,97.5)/100))
plot( density(enum.2002), type="l", lwd=2, col= "red" )
abline( v=e2002.qnt)
a4.m <- as.matrix(a4.res)
enum.2002 <- exp(a4.m[,"alpha"] + a4.m[,"beta"]*17)*20
summary( enum.2002 )
(e2002.qnt <- quantile( enum.2002, probs=c(50,2.5,97.5)/100))
plot( density(enum.2002), type="l", lwd=2, col= "red" )
abline( v=e2002.qnt)
plot( table(a4.m[,"fatal[27]"]), type="h", lwd=5, lend=2, col=gray(0.5), bty="n", ylab="" )
cat(DICmod1,DICmod3)
print(DICmod1,DICmod3)
print(c(DICmod1,DICmod3))
cat(c(DICmod1,DICmod3))
(c(DICmod1,DICmod3))
cat('DIC of model1: ',DICmod1)
print('DIC of model1: ',DICmod1)
DICmod1)
DICmod1
#Model Comparison
DICmod1 = dic.samples(a1.mod, n.iter=10000, thin=10, type="pD")
DICmod3 = dic.samples(a3.mod, n.iter=10000, thin =10, type="pD")
print('model 1 DIC')
DICmod1
print('model 2 DIC')
DICmod2
#Model Comparison
DICmod1 = dic.samples(a1.mod, n.iter=10000, thin=10, type="pD")
DICmod2 = dic.samples(a2.mod, n.iter=10000, thin =10, type="pD")
print('model 1 DIC')
DICmod1
print('model 2 DIC')
DICmod2
cat( "model
{
for( i in 1:I )
{
mu[i] <- exp( alpha + beta*(i-10) ) * miles[i]
fatal[i] ~ dpois( mu[i] )
}
alpha ~ dnorm(0,0.000001)
beta ~ dnorm(0,0.000001)
}",
file="a2.jag" )
a2.ini <- list( list( alpha=1.0, beta=-0.05 ),
list( alpha=1.5, beta=-0.06 ),
list( alpha=0.5, beta=-0.04 ) )
a2.dat <- list( fatal=c(airline$fatal,NA),
miles=c(airline$miles,20), I=27 )
a2.par <- c("alpha","beta","fatal[27]")
# Model compilation and burn-in
a2.mod <- jags.model( file = "a2.jag",
data = a2.dat,
inits = a2.ini,
n.chains = 3,
n.adapt = 1000 )
# Sampling from the posterior
a2.res <- coda.samples( a2.mod,
var = a2.par,
n.iter = 10000,
thin = 10 )
summary( a2.res )
summary(lm( log( fatal/miles ) ~ I(year-1985), data=airline))
library( Epi )
ci.lin( glm2)
