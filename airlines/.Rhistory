fatal[i] ~ dpois( mu[i] )
log(mu[i]) <- alpha + beta*miles[i]+ beta2 * miles[i]*rate[i]
}
alpha ~ dnorm(0,0.0001)
beta ~ dnorm(0.0001,0.00001)
beta2 ~ dnorm(0.0001,0.00001)
}",
file="a3.jag" )
a3.ini= list(
list(alpha = 0.01, beta = 0.6, beta2=0.1),
list(alpha = 0.2, beta = 0.2, beta2=0.2),
list(alpha = 0.7, beta = 0.7, beta2=0.3))
a3.dat <- list( rate= c(airline$rate,0.7080,0.3,0.4),fatal=c(airline$fatal,NA,NA,NA), miles=c(airline$miles,19.775,23.300,20.3), I=29 )
a3.par <- c("alpha","beta","beta2","fatal[27]","fatal[28]","fatal[29]")
# Model compilation and burn-in
a3.mod <- jags.model(file = "a3.jag",data = a3.dat,inits = a3.ini,n.chains = 3,n.adapt = 1000)
update(a3.mod,1000)
# Sampling from the posterior
a3.res <- coda.samples( a3.mod,var = a3.par,n.iter = 10000,thin = 50 )
summary( a3.res )
#Model Comparison
DICmodel1 = dic.samples(a1.mod, n.iter=10000, thin=10, type="pD")
DICmodel3 = dic.samples(a3.mod, n.iter=10000, thin =10, type="pD")
DICmodel4 = dic.samples(a4.mod, n.iter=10000, thin=10, type="pD")
DICmodel5 = dic.samples(a5.mod, n.iter=10000, thin =10, type="pD")
DICmodel1
DICmodel3
DICmodel4
DICmodel5
y.pred = c(a3.m[,"fatal[27]"],a3.m[,"fatal[28]"],a3.m[,"fatal[29]"])
a3.m <- as.matrix(a3.res)
a3.m[,"fatal[28]"]
a3.m <- as.matrix(a3.res)
y.pred = c(a3.m[,"fatal[27]"],a3.m[,"fatal[28]"],a3.m[,"fatal[29]"])
y.pred
a3.m <- as.matrix(a3.res)
y.pred = c(mean(a3.m[,"fatal[27]"]),mean(a3.m[,"fatal[28]"]),mean(a3.m[,"fatal[29]"]))
y.true = c(14,7,9)
plot(y.pred,y.true)
a3.m <- as.matrix(a3.res)
y.pred = c(mean(a3.m[,"fatal[27]"]),mean(a3.m[,"fatal[28]"]),mean(a3.m[,"fatal[29]"]))
y.true = c(14,7,9)
plot(y.pred,y.true)
library(ggplot2)
ggplot( aes(x = y.true, y = y.pred)) +  # Set up canvas with outcome variable on y-axis
geom_point()  # Plot the actual points
df=data.frame(y.true,y.pred)
df
a3.m <- as.matrix(a3.res)
y.pred = c(mean(a3.m[,"fatal[27]"]),mean(a3.m[,"fatal[28]"]),mean(a3.m[,"fatal[29]"]))
y.true = c(14,7,9)
plot(y.pred,y.true)
df=data.frame(y.true,y.pred)
library(ggplot2)
ggplot( df,aes(x = y.true, y = y.pred)) +  # Set up canvas with outcome variable on y-axis
geom_point()  # Plot the actual points
qplot(density(a5.m[,"fatal[27]"]),main="Fatal in 2002", col="red", lwd=2)
par(mfrow=c(1,3))
a5.m <- as.matrix(a5.res)
plot(density(a5.m[,"fatal[27]"]),main="Fatal in 2002", col="red", lwd=2)
grid (NULL,NULL, lty = 6, col = "cornsilk2")
abline( v=14,col="black")
a5.m <- as.matrix(a5.res)
plot(density(a5.m[,"fatal[28]"]),main="Fatal in 2003", col="red", lwd=2)
abline( v=7,col="black")
a5.m <- as.matrix(a5.res)
plot(density(a5.m[,"fatal[29]"]),main="Fatal in 2004", col="red", lwd=2)
abline( v=9,col="black")
par(mfrow=c(1,3))
a5.m <- as.matrix(a5.res)
plot(density(a5.m[,"fatal[27]"]),main="Fatal in 2002", col="red", lwd=2)
grid (NULL,NULL, lty = 6, col = "cornsilk2")
abline( v=14,col="black")
a5.m <- as.matrix(a5.res)
plot(density(a5.m[,"fatal[28]"]),main="Fatal in 2003", col="red", lwd=2)
grid (NULL,NULL, lty = 6, col = "cornsilk2")
abline( v=7,col="black")
a5.m <- as.matrix(a5.res)
plot(density(a5.m[,"fatal[29]"]),main="Fatal in 2004", col="red", lwd=2)
grid (NULL,NULL, lty = 6, col = "cornsilk2")
abline( v=9,col="black")
par(mfrow=c(1,3))
a4.m <- as.matrix(a4.res)
plot(density(a4.m[,"fatal[27]"]),main="Fatal in 2002", col="red", lwd=2)
abline( v=14,col="black")
a4.m <- as.matrix(a4.res)
plot(density(a4.m[,"fatal[28]"]),main="Fatal in 2003", col="red", lwd=2)
abline( v=7,col="black")
a4.m <- as.matrix(a4.res)
plot(density(a4.m[,"fatal[29]"]),main="Fatal in 2004", col="red", lwd=2)
abline( v=9,col="black")
par(mfrow=c(1,3))
a3.m <- as.matrix(a3.res)
plot(density(a3.m[,"fatal[27]"]),main="Fatal in 2002", col="red", lwd=2)
abline( v=14,col="black")
a3.m <- as.matrix(a3.res)
plot(density(a3.m[,"fatal[28]"]),main="Fatal in 2003", col="red", lwd=2)
abline( v=7,col="black")
a3.m <- as.matrix(a3.res)
plot(density(a3.m[,"fatal[29]"]),main="Fatal in 2004", col="red", lwd=2)
abline( v=9,col="black")
par(mfrow=c(1,3))
a3.m <- as.matrix(a3.res)
plot(density(a3.m[,"fatal[27]"]),main="Fatal in 2002", col="red", lwd=2)
grid (NULL,NULL, lty = 6, col = "cornsilk2")
abline( v=14,col="black")
a3.m <- as.matrix(a3.res)
plot(density(a3.m[,"fatal[28]"]),main="Fatal in 2003", col="red", lwd=2)
grid (NULL,NULL, lty = 6, col = "cornsilk2")
abline( v=7,col="black")
a3.m <- as.matrix(a3.res)
plot(density(a3.m[,"fatal[29]"]),main="Fatal in 2004", col="red", lwd=2)
grid (NULL,NULL, lty = 6, col = "cornsilk2")
abline( v=9,col="black")
library(rjags)
cat( "model {
for( i in 1:I ) {
fatal[i] ~ dpois(mu[i])
}
mu[i] ~ alpha+beta*(miles[i]-mean(miles[]))
alpha ~ dnorm(0,0.01)
beta ~ dnorm(0,0.01)
}", file="ar.jag" )
ar.par <- c("alpha","beta")
ar.ini <- list( list( alpha=1.0, beta=0.05 ),
list( alpha=1.5, beta=0.06 ))
ar.dat <- list( fatal=airline$fatal,
miles=airline$miles, I=26 )
# Model compilation and burn-in
ar.mod <- jags.model( file = "ar.jag",
data = ar.dat,
inits = ar.ini,
n.chains =2,
n.adapt = 1000 )
# Sampling from the posterior
a1.res <- coda.samples( a1.mod,
var = a1.par,
n.iter = 10000,
thin = 10 )
ar.par <- c("alpha","beta")
ar.ini <- list( list( alpha=1.0, beta=0.05 ),
list( alpha=1.5, beta=0.06 ))
ar.dat <- list( fatal=airline$fatal,
miles=airline$miles, I=26 )
# Model compilation and burn-in
ar.mod <- jags.model( file = "ar.jag",
data = ar.dat,
inits = ar.ini,
n.chains =2,
n.adapt = 1000 )
cat( "model {
for( i in 1:I ) {
fatal[i] ~ dpois(mu[i])
}
log(mu[i]) ~ alpha+beta*(miles[i]-mean(miles[]))
alpha ~ dnorm(0,0.01)
beta ~ dnorm(0,0.01)
}", file="ar.jag" )
ar.par <- c("alpha","beta")
ar.ini <- list( list( alpha=1.0, beta=0.05 ),
list( alpha=1.5, beta=0.06 ))
ar.dat <- list( fatal=airline$fatal,
miles=airline$miles, I=26 )
# Model compilation and burn-in
ar.mod <- jags.model( file = "ar.jag",
data = ar.dat,
inits = ar.ini,
n.chains =2,
n.adapt = 1000 )
cat( "model {
for( i in 1:I ) {
fatal[i] ~ dpois(mu[i])
}
mu[i] ~ alpha+beta*(miles[i]-mean(miles[]))
alpha ~ dnorm(0,0.01)
beta ~ dnorm(0,0.01)
}", file="ar.jag" )
# Model compilation and burn-in
ar.mod <- jags.model( file = "ar.jag",
data = ar.dat,
inits = ar.ini,
n.chains =2,
n.adapt = 1000 )
cat( "model {
for( i in 1:I ) {
fatal[i] ~ dpois(mu[i])
}
mu[i] ~ alpha+beta*(miles[i]-mean(miles[i]))
alpha ~ dnorm(0,0.01)
beta ~ dnorm(0,0.01)
}", file="ar.jag" )
# Model compilation and burn-in
ar.mod <- jags.model( file = "ar.jag",
data = ar.dat,
inits = ar.ini,
n.chains =2,
n.adapt = 1000 )
cat( "model {
for( i in 1:I ) {
fatal[i] ~ dpois(mu[i])
}
mu[i] ~beta*(miles[i]-mean(miles[]))
alpha ~ dnorm(0,0.01)
beta ~ dnorm(0,0.01)
}", file="ar.jag" )
# Model compilation and burn-in
ar.mod <- jags.model( file = "ar.jag",
data = ar.dat,
inits = ar.ini,
n.chains =2,
n.adapt = 1000 )
cat( "model {
for( i in 1:I ) {
fatal[i] ~ dpois(mu[i])
}
mu[i] =  alpha+beta*(miles[i]-mean(miles[]))
alpha ~ dnorm(0,0.01)
beta ~ dnorm(0,0.01)
}", file="ar.jag" )
# Model compilation and burn-in
ar.mod <- jags.model( file = "ar.jag",
data = ar.dat,
inits = ar.ini,
n.chains =2,
n.adapt = 1000 )
i
cat( "model {
for( i in 1:26 ) {
fatal[i] ~ dpois(mu[i])
}
mu[i] =  alpha+beta*(miles[i]-mean(miles[]))
alpha ~ dnorm(0,0.01)
beta ~ dnorm(0,0.01)
}", file="ar.jag" )
ar.par <- c("alpha","beta")
ar.ini <- list( list( alpha=1.0, beta=0.05 ),
list( alpha=1.5, beta=0.06 ))
ar.dat <- list( fatal=airline$fatal,
miles=airline$miles, I=26 )
# Model compilation and burn-in
ar.mod <- jags.model( file = "ar.jag",
data = ar.dat,
inits = ar.ini,
n.chains =2,
n.adapt = 1000 )
cat( "model {
for( i in 1:I ) {
fatal[i] ~ dpois(mu[i])
mu[i] =  alpha+beta*(miles[i]-mean(miles[]))
}
alpha ~ dnorm(0,0.01)
beta ~ dnorm(0,0.01)
}", file="ar.jag" )
# Model compilation and burn-in
ar.mod <- jags.model( file = "ar.jag",
data = ar.dat,
inits = ar.ini,
n.chains =2,
n.adapt = 1000 )
# Sampling from the posterior
a1.res <- coda.samples( a1.mod,
var = a1.par,
n.iter = 10000,
thin = 10 )
summary( a1.res )
# Model compilation and burn-in
ar.mod <- jags.model( file = "ar.jag",
data = ar.dat,
inits = ar.ini,
n.chains =2,
n.adapt = 1000 )
# Sampling from the posterior
ar.res <- coda.samples( ar.mod,
var = ar.par,
n.iter = 10000,
thin = 10 )
summary( ar.res )
cat( "model {
for( i in 1:I ) {
fatal[i] ~ dpois(mu[i])
mu[i] =  alpha+beta*(miles[i]-mean(miles[]))
}
alpha ~ dnorm(0,0.01)
beta ~ dnorm(0,0.01)
}", file="ar.jag" )
ar.par <- c("alpha","beta","fatal[27]","fatal[28]","fatal[29]")
ar.ini <- list( list( alpha=1.0, beta=0.05 ),
list( alpha=1.5, beta=0.06 ))
ar.dat <- list( c(fatal=airline$fatal,NA,NA,NA),
c(miles=airline$miles,19.775,23.3,20.3), I=29 )
# Model compilation and burn-in
ar.mod <- jags.model( file = "ar.jag",
data = ar.dat,
inits = ar.ini,
n.chains =2,
n.adapt = 1000 )
cat( "model {
for( i in 1:I ) {
fatal[i] ~ dpois(mu[i])
mu[i] =  alpha+beta*(miles[i]-mean(miles[]))
}
alpha ~ dnorm(0,0.01)
beta ~ dnorm(0,0.01)
}", file="ar.jag" )
ar.par <- c("alpha","beta","fatal[27]","fatal[28]","fatal[29]")
ar.ini <- list( list( alpha=1.0, beta=0.05 ),
list( alpha=1.5, beta=0.06 ))
ar.dat <- list( c(fatal=airline$fatal,NA),
c(miles=airline$miles,19.775), I=27 )
# Model compilation and burn-in
ar.mod <- jags.model( file = "ar.jag",
data = ar.dat,
inits = ar.ini,
n.chains =2,
n.adapt = 1000 )
cat( "model {
for( i in 1:I ) {
fatal[i] ~ dpois(mu[i])
mu[i] =  alpha+beta*(miles[i]-mean(miles[]))
}
alpha ~ dnorm(0,0.01)
beta ~ dnorm(0,0.01)
}", file="ar.jag" )
ar.par <- c("alpha","beta")
ar.ini <- list( list( alpha=1.0, beta=0.05 ),
list( alpha=1.5, beta=0.06 ))
ar.dat <- list( c(fatal=airline$fatal),
c(miles=airline$miles), I=26 )
# Model compilation and burn-in
ar.mod <- jags.model( file = "ar.jag",
data = ar.dat,
inits = ar.ini,
n.chains =2,
n.adapt = 1000 )
# Sampling from the posterior
ar.res <- coda.samples( ar.mod,
var = ar.par,
n.iter = 10000,
thin = 10 )
summary( ar.res )
cat( "model {
for( i in 1:I ) {
fatal[i] ~ dpois(mu[i])
mu[i] =  alpha+beta*(miles[i]-mean(miles[]))
}
alpha ~ dnorm(0,0.01)
beta ~ dnorm(0,0.01)
}", file="ar.jag" )
ar.par <- c("alpha","beta")
ar.ini <- list( list( alpha=1.0, beta=0.05 ),
list( alpha=1.5, beta=0.06 ))
ar.dat <- list( c(fatal=airline$fatal),
c(miles=airline$miles), I=26 )
# Model compilation and burn-in
ar.mod <- jags.model( file = "ar.jag",
data = ar.dat,
inits = ar.ini,
n.chains =2,
n.adapt = 1000 )
cat("model {
trend[1] <- beta0 + beta1 * miles[1]
for( i in 2 : 26 ) {
fatal[i] ~ dnorm( mu[i] , tau)
mu[i] <- trend[i] + ar1 * ( fatal[i-1] - trend[i-1] )
trend[i] <- beta0 + beta1 * miles[i]
}
ar1 ~ dunif(-1.1,1.1) # or dunif(-0.01,0.01)
beta0 ~ dnorm( 0 , 1.0E-12 )
beta1 ~ dnorm( 0 , 1.0E-12 )
tau ~ dgamma( 0.001 , 0.001 )}" ,file= "ar1.jag")
ar1.par <- c("ar1","beta0", "beta1", "tau")
ar1.ini <- list( list( ar1=0.01, beta0=0.01, beta1 = 0.01,tau=0.01 ))
ar1.dat <- list( fatal=airline$fatal,
miles=airline$miles)
ar1.mod <- jags.model( file = "ar1.jag",
data = ar1.dat,
inits = ar1.ini,
n.chains =1,
n.adapt = 1000 )
ar1.res <- coda.samples( ar1.mod,
var = ar1.par,
n.iter = 10000,
thin = 10 )
summary( ar1.res )
library(ggmcmc)
result2 = ggs(ar1.res)
ggs_density(result2)
ggs_traceplot(result2)
ggs_running(result2)
ggs_autocorrelation(result2)
cat("model {
trend[1] <- beta0 + beta1 * miles[1]
for( i in 2 : N ) {
fatal[i] ~ dnorm( mu[i] , tau)
mu[i] <- trend[i] + ar1 * ( fatal[i-1] - trend[i-1] )
trend[i] <- beta0 + beta1 * miles[i]
}
ar1 ~ dunif(-1.1,1.1)
beta0 ~ dnorm( 0 , 1.0E-12 )
beta1 ~ dnorm( 0 , 1.0E-12 )
tau ~ dgamma( 0.001 , 0.001 )}" ,file= "ar1_pred.jag")
ar1_pred.par <- c("ar1","beta0", "beta1", "tau")
ar1_pred.ini <- list( list( ar1=0.01, beta0=0.01, beta1 = 0.01,tau=0.01 ))
ar1_pred.dat <- list( fatal=c(airline$fatal,NA,NA,NA),
miles=c(airline$miles,miles.new),
N= 26+3)
#mod.forecast = jags.model(ar1_pred.dat,parameters.to.save = ar1_pred.par,mode)
ar1_pred.mod <- jags.model( file = "ar1_pred.jag",
data = ar1_pred.dat,
inits = ar1_pred.ini,
n.chains =1,
n.adapt = 1000 )
ar1_pred.res <- coda.samples( model = ar1_pred.mod,
var = ar1_pred.par,
n.iter = 10000,
thin = 10 )
summary(ar1_pred.res)
ar1_pred.par <- c("ar1","beta0", "beta1", "tau","fatal[27]","fatal[28]","fatal[29]")
ar1_pred.ini <- list( list( ar1=0.01, beta0=0.01, beta1 = 0.01,tau=0.01 ))
ar1_pred.dat <- list( fatal=c(airline$fatal,NA,NA,NA),
miles=c(airline$miles,miles.new),
N= 26+3)
ar1_pred.mod <- jags.model( file = "ar1_pred.jag",
data = ar1_pred.dat,
inits = ar1_pred.ini,
n.chains =1,
n.adapt = 1000 )
ar1_pred.res <- coda.samples( model = ar1_pred.mod,
var = ar1_pred.par,
n.iter = 10000,
thin = 10 )
summary(ar1_pred.res)
#time series model
miles.new = c(19.775,23.300,20.300)
cat("model {
trend[1] <- beta0 + beta1 * miles[1]
for( i in 2 : N ) {
fatal[i] ~ dnorm( mu[i] , tau)
mu[i] <- trend[i] + ar1 * ( fatal[i-1] - trend[i-1] )
trend[i] <- beta0 + beta1 * miles[i]
}
ar1 ~ dunif(-1.1,1.1)
beta0 ~ dnorm( 0 , 1.0E-12 )
beta1 ~ dnorm( 0 , 1.0E-12 )
tau ~ dgamma( 0.001 , 0.001 )}" ,file= "ar1_pred.jag")
ar1_pred.par <- c("ar1","beta0", "beta1", "tau","fatal[27]","fatal[28]","fatal[29]")
ar1_pred.ini <- list( list( ar1=0.01, beta0=0.01, beta1 = 0.01,tau=0.01 ))
ar1_pred.dat <- list( fatal=c(airline$fatal,NA,NA,NA),
miles=c(airline$miles,miles.new),
N= 26+3)
#mod.forecast = jags.model(ar1_pred.dat,parameters.to.save = ar1_pred.par,mode)
ar1_pred.mod <- jags.model( file = "ar1_pred.jag",
data = ar1_pred.dat,
inits = ar1_pred.ini,
n.chains =1,
n.adapt = 1000 )
ar1_pred.res <- coda.samples( model = ar1_pred.mod,
var = ar1_pred.par,
n.iter = 10000,
thin = 10 )
summary(ar1_pred.res)
ar.m <- as.matrix(ar1_pred.res)
y.pred = c(mean(ar.m[,"fatal[27]"]),mean(ar.m[,"fatal[28]"]),mean(ar.m[,"fatal[29]"]))
y.true = c(14,7,9)
df=data.frame(y.true,y.pred)
library(ggplot2)
ggplot( df,aes(x = y.true, y = y.pred)) +  # Set up canvas with outcome variable on y-axis
geom_point()  # Plot the actual points
ar.m <- as.matrix(ar1_pred.res)
par(mfrow=c(1,3))
plot(density(ar.m[,"fatal[27]"]),main="Fatal in 2002", col="red", lwd=2)
grid (NULL,NULL, lty = 6, col = "cornsilk2")
abline( v=14,col="black")
ar.m <- as.matrix(ar.res)
plot(density(ar.m[,"fatal[28]"]),main="Fatal in 2003", col="red", lwd=2)
ar.m[,"fatal[28]"]
ar.m[,"fatal[27]"]
ar.,m
ar.m
ar.m <- as.matrix(ar1_pred.res)
ar.m[,"fatal[27]"]
ar.m <- as.matrix(ar1_pred.res)
par(mfrow=c(1,3))
plot(density(ar.m[,"fatal[27]"]),main="Fatal in 2002", col="red", lwd=2)
grid (NULL,NULL, lty = 6, col = "cornsilk2")
abline( v=14,col="black")
ar.m <- as.matrix(ar.res)
plot(density(ar.m[,"fatal[28]"]),main="Fatal in 2003", col="red", lwd=2)
ar.m <- as.matrix(ar1_pred.res)
par(mfrow=c(1,3))
plot(density(ar.m[,"fatal[27]"]),main="Fatal in 2002", col="red", lwd=2)
grid (NULL,NULL, lty = 6, col = "cornsilk2")
abline( v=14,col="black")
plot(density(ar.m[,"fatal[28]"]),main="Fatal in 2003", col="red", lwd=2)
grid (NULL,NULL, lty = 6, col = "cornsilk2")
abline( v=7,col="black")
plot(density(ar.m[,"fatal[29]"]),main="Fatal in 2004", col="red", lwd=2)
grid (NULL,NULL, lty = 6, col = "cornsilk2")
abline( v=9,col="black")
y.pred = c(mean(ar.m[,"fatal[27]"]),mean(ar.m[,"fatal[28]"]),mean(ar.m[,"fatal[29]"]))
y.true = c(14,7,9)
df=data.frame(y.true,y.pred)
library(ggplot2)
ggplot( df,aes(x = y.true, y = y.pred)) +  # Set up canvas with outcome variable on y-axis
geom_point()  # Plot the actual points
resultar = ggs(ar1_pred.res)
ggs_density(resultar)
ggs_traceplot(resultar)
ggs_running(resultar)
ggs_autocorrelation(resultar)
ar.m <- as.matrix(ar1_pred.res)
df
